INCLUDE inc/instruments.midica

VAR $x = 5

/////////////////////////////////
// ==
/////////////////////////////////

0 - /4 l=EQ:_
( if=$x==5
	0  4  /4   l=1_    // 1_
)
( elsif=$x==6
	0  7  /4   l=2_
)
( elsif=$x==7
	0  10  /4  l=3_
)
( else
	0  13  /4  l=4_
)

( if $x == 4
	0  4  /4   l=1_
)
( elsif $x == 5
	0  7  /4   l=2_    // 2_
)
( elsif $x == 6
	0  10  /4  l=3_
)
( else
	0  13  /4  l=4_
)


( if = $x == 3
	0  4  /4   l=1_
)
( elsif = $x == 4
	0  7  /4   l=2_
)
( elsif = $x == 5
	0  10  /4  l=3_    // 3_
)
( else
	0  13  /4  l=4_
)


( if $x == 2
	0  4  /4   l=1\r
)
( elsif $x == 3
	0  7  /4   l=2\r
)
( elsif $x == 4
	0  10  /4  l=3\r
)
( else
	0  13  /4  l=4\r   // 4\r
)

/////////////////////////////////
// !=
/////////////////////////////////

0 - /4 l=NEQ:_
( if=$x!=4
	0  4  /4   l=1_    // 1_
)
( elsif=$x!=4
	0  7  /4   l=2_
)
( elsif=$x!=7
	0  10  /4  l=3_
)
( else
	0  13  /4  l=4_
)

( if $x != 5
	0  4  /4   l=1_
)
( elsif $x != 4
	0  7  /4   l=2_    // 2_
)
( elsif $x != 3
	0  10  /4  l=3_
)
( else
	0  13  /4  l=4_
)

( if = $x != 5
	0  4  /4   l=1_
)
( elsif = $x != 5
	0  7  /4   l=2_
)
( elsif = $x != 3
	0  10  /4  l=3_    // 3_
)
( else
	0  13  /4  l=4_
)


( if $x != 5
	0  4  /4   l=1\r
)
( elsif $x != 5
	0  7  /4   l=2\r
)
( elsif $x != 5
	0  10  /4  l=3\r
)
( else
	0  13  /4  l=4\r   // 4\r
)

/////////////////////////////////
// <
/////////////////////////////////
0 - /4 l=LT:_
( if=$x<6
	0  4  /4   l=1_    // 1_
)
( elsif=$x<7
	0  7  /4   l=2_
)
( elsif=$x<8
	0  10  /4  l=3_
)
( else
	0  13  /4  l=4_
)

( if $x < 5
	0  4  /4   l=1_
)
( elsif $x < 6
	0  7  /4   l=2_    // 2_
)
( elsif $x < 7
	0  10  /4  l=3_
)
( else
	0  13  /4  l=4_
)


( if = $x < 4
	0  4  /4   l=1_
)
( elsif = $x < 5
	0  7  /4   l=2_
)
( elsif = $x < 6
	0  10  /4  l=3_    // 3_
)
( else
	0  13  /4  l=4_
)


( if $x < 5
	0  4  /4   l=1\r
)
( elsif $x < 5
	0  7  /4   l=2\r
)
( elsif $x < 5
	0  10  /4  l=3\r
)
( else
	0  13  /4  l=4\r   // 4\r
)

/////////////////////////////////
// <=
/////////////////////////////////
0 - /4 l=LE:_
( if=$x<=5
	0  4  /4   l=1_    // 1_
)
( elsif=$x<=6
	0  7  /4   l=2_
)
( elsif=$x<=7
	0  10  /4  l=3_
)
( else
	0  13  /4  l=4_
)

( if $x <= 4
	0  4  /4   l=1_
)
( elsif $x <= 5
	0  7  /4   l=2_    // 2_
)
( elsif $x <= 6
	0  10  /4  l=3_
)
( else
	0  13  /4  l=4_
)


( if = $x <= 3
	0  4  /4   l=1_
)
( elsif = $x <= 4
	0  7  /4   l=2_
)
( elsif = $x <= 6
	0  10  /4  l=3_    // 3_
)
( else
	0  13  /4  l=4_
)


( if $x <= 2
	0  4  /4   l=1\r
)
( elsif $x <= 3
	0  7  /4   l=2\r
)
( elsif $x <= 4
	0  10  /4  l=3\r
)
( else
	0  13  /4  l=4\r   // 4\r
)

/////////////////////////////////
// >
/////////////////////////////////
0 - /4 l=GT:_
( if=$x>4
	0  4  /4   l=1_    // 1_
)
( elsif=$x>3
	0  7  /4   l=2_
)
( elsif=$x>2
	0  10  /4  l=3_
)
( else
	0  13  /4  l=4_
)

( if $x > 5
	0  4  /4   l=1_
)
( elsif $x > 4
	0  7  /4   l=2_    // 2_
)
( elsif $x > 3
	0  10  /4  l=3_
)
( else
	0  13  /4  l=4_
)


( if = $x > 6
	0  4  /4   l=1_
)
( elsif = $x > 5
	0  7  /4   l=2_
)
( elsif = $x > 4
	0  10  /4  l=3_    // 3_
)
( else
	0  13  /4  l=4_
)


( if $x > 7
	0  4  /4   l=1\r
)
( elsif $x > 6
	0  7  /4   l=2\r
)
( elsif $x > 5
	0  10  /4  l=3\r
)
( else
	0  13  /4  l=4\r   // 4\r
)

/////////////////////////////////
// >=
/////////////////////////////////
0 - /4 l=GE:_
( if=$x>=5
	0  4  /4   l=1_    // 1_
)
( elsif=$x>=3
	0  7  /4   l=2_
)
( elsif=$x>=2
	0  10  /4  l=3_
)
( else
	0  13  /4  l=4_
)

( if $x >= 6
	0  4  /4   l=1_
)
( elsif $x >= 5
	0  7  /4   l=2_    // 2_
)
( elsif $x >= 4
	0  10  /4  l=3_
)
( else
	0  13  /4  l=4_
)


( if = $x >= 7
	0  4  /4   l=1_
)
( elsif = $x >= 6
	0  7  /4   l=2_
)
( elsif = $x >= 5
	0  10  /4  l=3_    // 3_
)
( else
	0  13  /4  l=4_
)


( if $x >= 8
	0  4  /4   l=1\r
)
( elsif $x >= 7
	0  7  /4   l=2\r
)
( elsif $x >= 6
	0  10  /4  l=3\r
)
( else
	0  13  /4  l=4\r   // 4\r
)

/////////////////////////////////
// in
/////////////////////////////////
0 - /4 l=IN:_
( if=$x in 5 ; 6 ; 7
	0  4  /4   l=1_    // 1_
)
( elsif=$x in 6
	0  7  /4   l=2_
)
( elsif=$x in 7
	0  10  /4  l=3_
)
( else
	0  13  /4  l=4_
)

( if $x in 4
	0  4  /4   l=1_
)
( elsif $x in 5
	0  7  /4   l=2_    // 2_
)
( elsif $x in 6
	0  10  /4  l=3_
)
( else
	0  13  /4  l=4_
)


( if = $x in 3
	0  4  /4   l=1_
)
( elsif = $x in 4
	0  7  /4   l=2_
)
( elsif = $x in 5
	0  10  /4  l=3_    // 3_
)
( else
	0  13  /4  l=4_
)


( if $x in 2
	0  4  /4   l=1\r
)

	// empty lines between blocks are allowed

( elsif $x in 3
	0  7  /4   l=2\r
)
( elsif $x in 4
	0  10  /4  l=3\r
)
( else
	0  13  /4  l=4\r   // 4\r
)

/////////////////////////////////
// DEFINED
/////////////////////////////////

FUNCTION defined_test
	0 - /4 l=DEF:_
	( if=${xx}
		0  4  /4   l=1_    // 1_
	)
	( elsif=${yy}
		0  7  /4   l=2_
	)
	( elsif=${zz}
		0  10  /4  l=3_
	)
	( else
		0  13  /4  l=4_
	)
	
	( if ${yy}
		0  4  /4   l=1_
	)
	( elsif ${xx}
		0  7  /4   l=2_    // 2_
	)
	( elsif ${zz}
		0  10  /4  l=3_
	)
	( else
		0  13  /4  l=4_
	)
	
	( if = ${yy}
		0  4  /4   l=1_
	)
	( elsif = ${zz}
		0  7  /4   l=2_
	)
	( elsif = ${xx}
		0  10  /4  l=3_    // 3_
	)
	( else
		0  13  /4  l=4_
	)
	
	( if ${aa}
		0  4  /4   l=1\r
	)
	( elsif ${bb}
		0  7  /4   l=2\r
	)
	( elsif ${cc}
		0  10  /4  l=3\r
	)
	( else
		0  13  /4  l=4\r   // 4\r
	)
END
CALL defined_test(xx=55)

/////////////////////////////////
// NOT DEFINED
/////////////////////////////////

FUNCTION not_defined_test
	0 - /4 l=NDEF:_
	( if=!${yy}
		0  4  /4   l=1_        // 1_
	)
	( elsif=!${xx}
		0  7  /4   l=2_
	)
	( elsif=!${zz}
		0  10  /4  l=3_
	)
	( else
		0  13  /4  l=4_
	)
	
	( if !${xx}
		0  4  /4   l=1_
	)
	( elsif !${zz}
		0  7  /4   l=2_        // 2_
	)
	( elsif !${zz}
		0  10  /4  l=3_
	)
	( else
		0  13  /4  l=4_
	)
	
	( if = !${xx}
		0  4  /4   l=1_
	)
	( elsif = !${xx}
		0  7  /4   l=2_
	)
	( elsif = !${yy}
		0  10  /4  l=3_        // 3_
	)
	( else
		0  13  /4  l=4_
	)
	
	( if ! ${xx}
		0  4  /4   l=1\r
	)
	( elsif ! $x
		0  7  /4   l=2\r
	)
	( elsif ! ${xx}
		0  10  /4  l=3\r
	)
	( else
		0  13  /4  l=4\r       // 4\r
	)
END
CALL not_defined_test(xx=55)


/////////////////////////////////
// IF AFTER ELSIF
/////////////////////////////////

0  13  /4  l=I.A.E.:_
( if $x
	0  10  /4  l=1_     // 1_
)
( elsif $x
	0  10  /4  l=2_
)
( if $x
	0  10  /4  l=3\r    // 3_
)

/////////////////////////////////
// NESTED
/////////////////////////////////

0 - /4 l=Nested:_
( if $x in 4; 5
	0  10  /4  l=a_              // a_
	( if $x in 4;5
		0  10  /4  l=a1_         // a1_
		( if $x == 4
			0  10  /4  l=a1a_
		)
		( elsif $x == 5
			0  10  /4  l=a1b_    // a1b_
		)
		( else
			0  10  /4  l=a1c_
		)
		0  10  /4  l=a_          // a1_
	)
	
	// test
	
	( elsif $x in 4;5
		0  10  /4  l=a2_
		( if $x == 5
			0  10  /4  l=a2a_
		)
		( elsif $x == 5
			0  10  /4  l=a2b_
		)
		0  10  /4  l=a2_
	)
	
	( if $x == 2
		0  10  /4  l=b1_
	)
	( elsif $x == 4
		0  10  /4  l=b2_
	)
	( else
		( if $x == 2
			0  10  /4  l=b3a_
		)
		( elsif $x == 5
			0  10  /4  l=b3b_   // b3b_
		)
		( if $x == 5
			0  10  /4  l=b3c_   // b3c_
		)
	)
)
// if after if
( if $x in 4; 5
	0  13  /4  l=if\r   // if\r
)

/////////////////////////////////
// CALL
/////////////////////////////////

0  13  /4  l=CALL:_    // CALL:_
FUNCTION call_test
	0  13  /4  l=$[0]
END
CALL call_test(1_) if $x == 4
CALL call_test(2_) if $x == 5, q=3    // 2_2_2_
CALL call_test(3_) if $x != 5
CALL call_test(4_) if $x > 4          // 4_
(
	CALL call_test(5) if $x == 4
	CALL call_test(6) if $x == 5      // 6
)
